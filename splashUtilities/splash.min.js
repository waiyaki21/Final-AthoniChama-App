window.splashApi.onAppVersion((version) => { const versionElement = document.getElementById('version'); if (versionElement) { versionElement.textContent = `v.${version}` } }); window.splashApi.onStatusChange(({ message, type, progress }) => {
    const statusListContainer = document.getElementById('status-list-container'); const statusHeader = document.getElementById('header'); const statusState = document.getElementById('status'); const statusVersion = document.getElementById('version'); const loader = document.querySelector('.loader'); if (type === 'download' && statusListContainer) { const previousDownloadRow = statusListContainer.querySelector('.status-row.download'); if (previousDownloadRow) { previousDownloadRow.querySelector('.progress-bar-fill').style.width = `${progress}%`; previousDownloadRow.querySelector('.status-text').innerText = `• ${message.toUpperCase()} (${progress}%)`; return } }
    const messageRow = document.createElement('div'); messageRow.classList.add('status-row'); if (type === 'download') messageRow.classList.add('download'); if (type === 'download') {
        messageRow.innerHTML = `
            <span class="status-text">• ${message.toUpperCase()}</span>
            <div class="progress-bar">
                <div class="progress-bar-fill" style="width: ${progress}%"></div>
            </div>`} else { messageRow.innerHTML = `<span class="status-dot status-text">• ${message.toUpperCase()}</span>` }
    let color; switch (type) { case 'log': color = '#10B981'; break; case 'info': color = '#06B6D4'; break; case 'warn': color = '#F59E0B'; break; case 'error': color = '#EF4444'; break; case 'download': color = '#3B82F6'; break; default: color = '#FFFFFF'; break }
    messageRow.style.color = color; if (statusListContainer) { statusListContainer.appendChild(messageRow); statusListContainer.style.borderColor = color }
    if (statusListContainer) { statusListContainer.scrollTop = statusListContainer.scrollHeight }
    if (statusHeader) statusHeader.style.color = color; if (statusState) statusState.style.color = color; if (statusVersion) statusVersion.style.color = color; if (loader) { loader.style.borderTopColor = color }
})